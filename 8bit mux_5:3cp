module bit8mup(p,a,b);
output[15:0]p;
input[7:0]a,b;
wire[63:0]w;
wire[53:0]s;
wire[58:0]c;

 //stage1//

and a1(w[0],a[0],b[0]);
and a2(w[1],a[1],b[0]);
and a3(w[2],a[2],b[0]);
and a4(w[3],a[3],b[0]);
and a5(w[4],a[4],b[0]);
and a6(w[5],a[5],b[0]);
and a7(w[6],a[6],b[0]);
and a8(w[7],a[7],b[0]);
and a9(w[8],a[0],b[1]);
and a10(w[9],a[1],b[1]);
and a11(w[10],a[2],b[1]);
and a12(w[11],a[3],b[1]);
and a13(w[12],a[4],b[1]);
and a14(w[13],a[5],b[1]);
and a15(w[14],a[6],b[1]);
and a16(w[15],a[7],b[1]);
and a17(w[16],a[0],b[2]);
and a18(w[17],a[1],b[2]);
and a19(w[18],a[2],b[2]);
and a20(w[19],a[3],b[2]);
and a21(w[20],a[4],b[2]);
and a22(w[21],a[5],b[2]);
and a23(w[22],a[6],b[2]);
and a24(w[23],a[7],b[2]);
and a25(w[24],a[0],b[3]);
and a26(w[25],a[1],b[3]);
and a27(w[26],a[2],b[3]);
and a28(w[27],a[3],b[3]);
and a29(w[28],a[4],b[3]);
and a30(w[29],a[5],b[3]);
and a31(w[30],a[6],b[3]);
and a32(w[31],a[7],b[3]);
and a33(w[32],a[0],b[3]);
and a34(w[33],a[1],b[4]);
and a35(w[34],a[2],b[4]);
and a36(w[35],a[3],b[4]);
and a37(w[36],a[4],b[4]);
and a38(w[37],a[5],b[4]);
and a39(w[38],a[6],b[4]);
and a40(w[39],a[7],b[4]);
and a41(w[40],a[0],b[5]);
and a42(w[41],a[1],b[5]);
and a43(w[42],a[2],b[5]);
and a44(w[43],a[3],b[5]);
and a45(w[44],a[4],b[5]);
and a46(w[45],a[5],b[5]);
and a47(w[46],a[6],b[5]);
and a48(w[47],a[7],b[5]);
and a49(w[48],a[0],b[6]);
and a50(w[49],a[1],b[6]);
and a51(w[50],a[2],b[6]);
and a52(w[51],a[3],b[6]);
and a53(w[52],a[4],b[6]);
and a54(w[53],a[5],b[6]);
and a55(w[54],a[6],b[6]);
and a56(w[55],a[7],b[6]);
and a57(w[56],a[0],b[7]);
and a58(w[57],a[1],b[7]);
and a59(w[58],a[2],b[7]);
and a60(w[59],a[3],b[7]);
and a61(w[60],a[4],b[7]);
and a62(w[61],a[5],b[7]);
and a63(w[62],a[6],b[7]);
and a64(w[63],a[7],b[7]);

//stage 2//
ha ha0(s[0],c[0],w[2],w[9]);
fa fa1(s[1],c[1],w[3],w[10],w[18]);
fa fa2(s[2],c[2],w[4],w[11],w[17]);
m5_2 mp3(s[3],c[3],w[5],w[12],w[19],w[26],w[33]);
m5_2 mp4(s[4],c[4],w[6],w[13],w[20],w[27],w[34]);
m5_3 mp5(s[5],c[5],c[6],w[7],w[14],w[21],w[28],w[35]);
ha ha6(s[6],c[7],w[42],w[49]);
m5_3 mp7(s[7],c[8],c[9],w[8],w[15],w[22],w[29],w[36]);
fa fa8(s[8],c[10],w[43],w[50],w[57]);
m5_3 mp9(s[9],c[11],c[12],w[16],w[23],w[30],w[37],w[44]);
ha ha10(s[10],c[13],w[51],w[58]);
m5_3 mp11(s[11],c[14],c[15],w[24],w[31],w[38],w[45],w[52]);
m5_3 mp12(s[12],c[16],c[17],w[32],w[39],w[46],w[53],w[60]);
fa fa13(s[13],c[18],w[40],w[47],w[54]);
fa fa14(s[14],c[19],w[48],w[55],w[62]);
ha ha15(s[15],c[20],w[56],w[63]);


//stage 3//
ha ha16(s[16],c[21],c[0],s[1]);
fa fa17(s[17],c[22],c[1],s[2],w[25]);
ha ha18(s[18],c[23],c[2],s[3]);
ha ha19(s[19],c[24],c[3],s[4]);
fa fa20(s[20],c[25],c[4],c[5],s[6]);
fa fa21(s[21],c[26],c[5],c[7],s[7]);
m5_3 mp22(s[22],c[27],c[28],c[6],c[8],c[10],s[9],s[10]);
m5_3 mp23(s[23],c[29],c[30],c[9],c[11],c[13],s[11],w[59]);
fa fa24(s[24],c[31],c[12],c[14],s[12]);
fa fa25(s[25],c[32],c[15],c[16],s[13]);
fa fa26(s[26],c[33],c[17],c[18],s[14]);
ha ha27(s[27],c[34],c[19],s[15]);
ha ha28(s[28],c[35],c[20],w[63]);


//stage 3//
ha ha29(s[29],c[36],c[21],s[17]);
ha ha30(s[30],c[37],c[22],s[18]);
ha ha31(s[31],c[38],c[23],s[19]);
ha ha32(s[32],c[39],c[24],s[20]);
fa fa33(s[33],c[40],c[25],s[21],s[8]);
ha ha34(s[34],c[41],c[26],s[22]);
ha ha35(s[35],c[42],c[27],s[23]);
fa fa36(s[36],c[43],c[28],c[29],s[24]);
fa fa37(s[37],c[44],c[30],c[31],s[25]);
ha ha38(s[38],c[45],c[32],s[26]);
ha ha39(s[39],c[46],c[33],s[27]);
ha ha40(s[40],c[47],c[34],s[28]);

//stage4 //

ha ha41(s[41],c[48],c[36],s[30]);
fa fa42(s[42],c[49],c[37],s[31],c[48]);
fa fa43(s[43],c[50],c[38],s[32],c[49]);
fa fa44(s[44],c[51],c[39],s[33],c[50]);
fa fa45(s[45],c[52],c[40],s[34],c[51]);
fa fa46(s[46],c[53],c[41],s[35],c[52]);
fa fa47(s[47],c[54],c[42],s[36],c[53]);
fa fa48(s[48],c[55],c[43],s[37],c[54]);
fa fa49(s[49],c[56],c[44],s[38],c[55]);
fa fa50(s[50],c[57],c[45],s[39],c[56]);
fa fa51(s[51],c[58],c[46],s[40],c[57]);

//stage 5//

xor (s[52],c[35],c[47]);
xor (s[53],c[58],s[52]);

assign p[0]= w[0];
assign p[1]= s[0];
assign p[2]= s[16];
assign p[3]= s[29];
assign p[4]= s[41];
assign p[5]= s[42];
assign p[6]= s[43];
assign p[7]= s[44];
assign p[8]= s[45];
assign p[9]= s[46];
assign p[10]= s[47];
assign p[11]= s[48];
assign p[12]= s[49];
assign p[13]= s[50];
assign p[14]= s[51];
assign p[15]= s[53];



endmodule
